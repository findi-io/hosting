apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ghost
  # Add labels to your application object.
  labels:
    name: ghost
spec:
  # The project the application belongs to.
  project: {{.Release.Namespace}}

  # Source of the application manifests
  source:
    repoURL: https://charts.bitnami.com/bitnami  # Can point to either a Helm chart repo or a git repo.
    targetRevision: 19.1.60  # For Helm, this refers to the chart version.
    chart: ghost  # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.

    helm:
      passCredentials: false # If true then adds --pass-credentials to Helm commands to pass credentials to all domains
      # Extra parameters to set (same as setting through values.yaml, but these take precedence)

      # Release name override (defaults to application name)
      releaseName: ghost
      version: v3
      values: |
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        service:
          type: ClusterIP
        replicaCount: 1
        ghostUsername: "Demo User"
        ghostPassword: randomPassword
        ghostEnableHttps: false
        ghostEmail: demo.user@test.com
        ghostBlogTitle: "Demo"
        ghostHost: ghost.{{.Release.Namespace}}.findi.biz
        smtpHost: smtp4dev.{{.Release.Namespace}}.svc.cluster.local
        smtpPort: 25
        smtpUser: "postmaster"
        smtpPassword: "mailpassword"
        smtpService: "Mailgun"
        podAnnotations:
          sidecar.istio.io/inject: "false"
        persistence:
          enabled: true
          size: 1Gi
        mysql:
          enabled: false
        externalDatabase:
          host: ghost-cluster-mysql-master.{{.Release.Namespace}}.svc.cluster.local
          user: ghost
          password: randomPassword
          database: ghost
        ingress:
          enabled: true
          hostname: ghost.{{.Release.Namespace}}.findi.biz
          tls: false
          annotations:
            external-dns: "true"
  # Destination cluster and namespace to deploy the application
  destination:
    server: https://kubernetes.default.svc
    # The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    namespace: {{.Release.Namespace}}

  # Will ignore differences between live and desired states during the diff. Note that these configurations are not
  # used during the sync process.
  ignoreDifferences:
  # for the specified json pointers
  - group: apps
    kind: Deployment
    jsonPointers:
    - /spec/replicas
  - group: apps
    kind: Statefulset
    jsonPointers:
    - /spec/replicas
  # for the specified managedFields managers
  - group: "*"
    kind: "*"
    managedFieldsManagers:
    - kube-controller-manager
  - group: "*"
    kind: MutatingWebhookConfiguration
    jsonPointers:
    - /webhooks/0/clientConfig/caBundle
